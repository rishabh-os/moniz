on:
  push:
    branches:
      - main
    paths:
      - "pubspec.yaml"
      - ".github/**"
name: "Build & Release"
jobs:
  check-version-change:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation

      - name: Make scripts executable
        run: |
          chmod +x .github/scripts/version_checker.sh
          chmod +x .github/scripts/generate_changelog.sh

      - name: Check if version changed, generate changelog
        id: check-version
        run: .github/scripts/version_checker.sh
        continue-on-error: false
      - name: Upload changelog
        if: ${{steps.check-version.outputs.VERSION_CHANGED}} == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: changelog-artifact
          path: CHANGELOG_GENERATED.md

  build:
    name: Build & Release
    needs: check-version-change
    if: ${{needs.check-version-change.outputs.VERSION_CHANGED}} == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog-artifact
      - name: ðŸš€ Cache pub deps
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - name: Setup Android SDK
        uses: amyu/setup-android@v4
      - name: Install dependenices
        run: flutter pub get
      - name: Set up env variables
        env:
          MAPBOX_APIKEY: ${{ secrets.MAPBOX_APIKEY }}
          GOOGLE_MAPS_APIKEY: ${{ secrets.GOOGLE_MAPS_APIKEY }}
        run: |
          cat << EOF > .env
          MAPBOX_APIKEY=$MAPBOX_APIKEY
          GOOGLE_MAPS_APIKEY=$GOOGLE_MAPS_APIKEY
          POSTHOG_APIKEY=$POSTHOG_APIKEY
          EOF
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | openssl base64 -d > my-release-key.jks
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=../../my-release-key.jks" >> android/key.properties
      - run: dart run build_runner build --delete-conflicting-outputs
      - run: dart run flutter_iconpicker:generate_packs --packs roundedMaterial
      - run: flutter build apk --split-per-abi --no-tree-shake-icons
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          bodyFile: CHANGELOG_GENERATED.md
          artifacts: "build/app/outputs/flutter-apk/*.apk"
          tag: v${{ env.VERSION }}
